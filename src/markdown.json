[{"content":"\nhello man\n","data":{"title":"test blog"},"isEmpty":false,"excerpt":""},{"content":"\n# state of the project\n\npersonally i stopped using this system, now i use english to solve the problems discussed [here](/blog/franco). but it's usable for any one agrees more with my old position.\nif you want to change something or you want to mantain the project i can help you, pull requests are welcome on the [github repository](https://github.com/saadnpq/compliant-franco).\n\n# abstraction\n\nthis project is supposed to be an implementation of ideas introduced by\n[this research article](/blog/franco).\nto understand the rationale behind all of this, or to have a better\ninsight about the issue of the Arabic writing system, please refer to\nthe article.\n\n# why?\n\n  - to have a standardized, documented, eloquent, and community\n    developed Franco flavor.  \n  - to have a consistent, searchable and bidirectional friendly Arabic\n    writing system.  \n  - a reference for people with unreadable Franco  \n\n# Boundary conditions\n\n1.  Franco is a writing system for Arabic speakers, not a way to write\n    Arabic to be pronounced by English speakers.  \n2.  Franco constrains itself to ASCII characters not to English\n    alphabet, however, it should not conflict with it (English\n    alphabet).  \n3.  as much as we can, there should be only **one** \"right\" way to write\n    most word.\n\n# abbreviations\n\nthose abbreviations and acronyms are used throughout the document :\n\n  - TAWS  \n    the Traditional Arabic Writing System  \n  - CvC  \n    consonant + short vowel + consonant\n\n# consonants\n\nthis is not a transliteration system, but for your convenience i've\ncompared the symbols of Franco to those of TAWS which we are used to -\ninstead of IPA for example.\n\n| TAWS | Franco |\n| ---- | ------ |\n| ا    | a      |\n| ء    | 2      |\n| ب    | b      |\n| ت    | t      |\n| ث    | $      |\n| ج    | g,j    |\n| ح    | 7      |\n| خ    | 5      |\n| د    | d      |\n| ذ    | 6      |\n| ر    | r      |\n| ز    | z      |\n| س    | s      |\n| ش    | 4      |\n| ع    | 3      |\n| غ    | 8      |\n| ف    | f      |\n| ق    | 9      |\n| ك    | k      |\n| ل    | l      |\n| م    | m      |\n| ن    | n      |\n| ه    | h      |\n| و    | w      |\n| ى    | y      |\n\n## Digraphs\n\nDigraphs are two letters that behaves as a unit and is not the sum of\nits parts, e.g. \"ch\", \"sh\", \"kh\" and \"th\" in English.  \nDigraphs are basically an ugly hack to the English writing system, when\nused with other languages which uses them a lot, as in our case, it\nmakes words longer and harder to read, specially for repeated letters,\ni.e. shadda.\n\n| English     | Franco |\n| ----------- | ------ |\n| kh          | 5      |\n| sh          | 4      |\n| gh          | 8      |\n| dh          | D      |\n| th in throw | $      |\n| th in the   | 6      |\n\n## don't start with \"2\"\n\nsince in most Latin languages e,o,a in the beginning of words contain\nthe \"2\" in their pronounciation, we can borrow this property.\n\n| example | should be |\n| ------- | --------- |\n| 2ana    | ana       |\n| 2AMAR   | AMAR      |\n| 2egry   | egry      |\n| 2oddaam | oddaam    |\n| 2e2laam | e2laam    |\n| 2ul     | ul        |\n\n# velarization\n\nconsonants in many languages can be **velarized**, velarization is a\nproperty that gives a duller sound to the consonant which also affects\nthe neighboring vowels and consonants. in the egyptian language/dialect\nwe often prefer to have an entire veralized syllable, so for convenience\nand readiability (but not necessarily phonetically accurate) we assume\nthat any vowel between velarized consonants is also veralized (the\nnucleus of the syllable).\n\nfrom wikipedia\n\n> Velarization is a secondary articulation of consonants by which the\n> back of the tongue is raised toward the velum during the articulation\n> of the consonant.\n\nin TAWS \"ض ط ظ ص\" are examples of veralized consonants that have a\ncharacter representation, but in reality other consonants such as\n\"l,r,b,m\" can also be velarized. those consonants are assigned capital\nletters in compliant Franco.\n\nsince Capital letters doesn't have any phonetic differences than lower\ncase letters in all alphabetic writing systems, it's perfect to\nrepresent velarized consonants in compliant Franco (and long vowels\nalso).\n\none great thing about this representation is its backward compatibility,\nby backward compatibility i mean if someone wrote ط as T instead of t,\nit won't effect the interpretation of the word if the receiver doesn't\nknow this mapping. we basically lose nothing - *kinda* - but we gain\nmore clarification and disambiguation.\n\n### importance of case sensitivity\n\nwithout those we have no distinction between many words, for example:\n\n  - fos7a and foS7a  \n  - bass and baSS  \n  - 7aZZ and 7azz  \n  - GAARy(my neighbor) and gaary (current)  \n  - garraa7 and gaRRAA7  \n  - etrabbeet and eTRABBeet  \n  - SAAB and saab  \n  - mafRUD and mafrud  \n  - enSef and ensef  \n  - DALL and dall  \n  - BA3D and ba3d  \n  - TAAR and taar  \n  - BAAT and baat  \n  - DAHR and dahr\n\n## what we lose\n\nwe obviously lose capitalization of names in Franco text, which is not\nused already.\n\n# diacritics and vowels\n\n## short vowels\n\nthe table below shows the basic diacritics transliterations.\n\n|             |        |              |\n| ----------- | ------ | ------------ |\n| traditional | Franco | Unicode name |\n| َ           | a      | FATHA        |\n| ُ           | o      | DAMMA        |\n| ِ           | e      | KASRA        |\n\n## long vowels\n\n|             |        |              |\n| ----------- | ------ | ------------ |\n| traditional | Franco | Unicode name |\n| ا + َ       | aa     | FATHA + ALEF |\n| و + ُ       | u      | DAMMA + WAW  |\n| ى + ِ       | i      | KASRA + YEH  |\n\nthere is also vowels that can't be expressed by TAWS, as traditional\nArabic has no such vowels in its inventory. for those we use \"ee\" and\n\"aa\"\n\n| diacritic | examples           |\n| --------- | ------------------ |\n| ee        | leeh (why), la2eet |\n| oo        | moot (death), noom |\n\n### importance of long vowels\n\nagain, without those we have no distinction between lots of words, for example:\n\n  - zaman and zamaan  \n  - men and min  \n  - 7ARAM and 7ARAAM  \n  - malak, malaak, maalak\n\n### why we need new vowels not in TAWS\n\nthe traditional system has no way to resolve the difference between for\nexample:\n\n  - moot and mut  \n  - kun and koon  \n  - ru7 and roo7  \n  - TIR and TEER  \n  - betu3 and betoo3  \n  - din and deen  \n  - fu2 and foo2\n\n### more examples\n\nfor didactic purposes someone may want more examples.\n\n1.  ee\n    \n      - yareet  \n      - been el-beneen  \n      - ee (what)  \n      - leela  \n      - 8eer  \n      - 4ee2  \n      - feen  \n      - etneen, meteen, toffa7teen, etc.  \n      - la2eet, 7abbeet, geet, etc.  \n      - 3eneek, regleek, edeek, etc.  \n      - 3eneeha, regleeha, edeeha, etc.\n\n2.  oo\n    \n      - 4ook  \n      - 4oo2  \n      - dool  \n      - loola  \n      - Soom  \n      - loon\n\n# shadda\n\nshadda in TAWS is a diacritic that is phonetically equivalent to a\nrepeated letter. in Franco it is represented by - yeah, you guessed it -\na repeated letter, e.g. YALLA, ba7ebbek, kollo.\n\npeople with poor Franco often omit the second letter causing one of the\nbiggest sources of ambiguity in mainstream Franco text, as omitting the\nsecond letter normally yields a different word. try to convince your\nwife that the message \"hagElak bel-MaRa\" she found on your phone is\nsupposed to be \"hagElak bel-MaRRa\" to know how important this is. i \ncan't emphasize more that the second letter is not optional and text\ncompliant to this spec should always write the shadda appropriately\nwherever it appears.\n\nexamples:\n\n  - 4adda  \n  - howwa  \n  - heyya  \n  - lessa  \n  - 5omsomeyya  \n  - 9essa  \n  - mosta3edda\n\n# The hyphen\n\nthe hyphen, i.e. \"-\", has three use cases:\n\n  - after the definite article  \n  - when we want to emphasize that two characters should not be\n    interpreted as a digraph. this occurs a lot in the \"sh\" and \"th\"\n    sequence. for example: sme3t *sot-ha*, byet-hayya2lak, as-hal,\n    btet-haz  \n  - to fit English words in Arabic grammer like: aa3ed *ba-chill*, 3reft\n    a-configure el-btA3.\n\n# the definite article\n\nthe definite article in compliant Franco is not as simple as \"the\" in\nEnglish or \"-ال\" in TAWS. generally it can appear as \"el-…\", \"l-…\",\n\"eX-X…\" or \"X-X…\"(where X represents on of the sun letters discussed\n*here*).\n\nfor programmers, this Emacs-style regular expression will match all\npossible forms a definite article can take in compliant Franco:\n\n``` example\ne?\\(?:l\\|\\([tT$6dDrzZnsS4kg]\\)\\)-\\1?\n```\n\n## sun letters\n\nsome words start with letters called sun letters (shown below) that has\nthe effect of turning the \"l\" to a copy of itself, i.e. shadda. for\nexample *el naharda* should be written as *en-naharda* like how it's\nactually pronounced\n\nsome examples:\n\n| letter | example                |\n| ------ | ---------------------- |\n| t      | et-tegaah waa7ed       |\n| T      | SOLTAN eT-TARAB        |\n| $      | e$-$a9AFA el-3ARABEYYA |\n| 6      | wa9t e6-6orwa          |\n| d      | omm ed-donya           |\n| D      | el-wa2t eD-DAAYE3      |\n| r      | ya de7ket eR-ROMMAAn   |\n| z      | ez-zaman TAWIl         |\n| Z      | eZ-ZAAher keda         |\n| n      | ER-Rakk 3an-neyya      |\n| s      | zayy es-soKKAR         |\n| S      | eS-SO7AB fe agaaza     |\n| 4      | 3ala add e4-4oo2       |\n| k      | fek-konaafa            |\n| g      | eg-gee4 we4-4ORTA      |\n\n## moon letters\n\nmoon letters are straight forward, they are not sun letters and they\ndon't touch the \"el\".\n\nexamples:\n\n  - el-lo8a  \n  - el-3ammeyya  \n  - el-MASREYYA  \n  - el-9AhERA  \n  - el-ward  \n  - el-balady  \n  - w keda..\n\n## to \"e\" or not to \"e\"\n\nthat is the question. the rule is similar to what's described later in\n*shortening*. it depends on the preceding word, if it ends with \"a\" or\n\"o\", the e is ommited. for example:\n\n  - ana l-awwal wana l-aa5er  \n  - 3ala l-maa4y  \n  - lessa d-donya b 5eer  \n  - yabo r-reggaala\n\n# prepositions\n\n| TAWS | Franco | example             |\n| ---- | ------ | ------------------- |\n| ب    | b/be   | b we44 reglak       |\n| و    | w/we   | a7la w a7la         |\n| \\-ل  | l/le   | a4ky l min          |\n| في   | f/fe   | kalaam fe kalaam    |\n| على  | 3ala   | 3ala maagy          |\n| من   | men    | 5o44 men hena       |\n| ف    | fa     | konn fa yakun       |\n| اللى | elly   | elly hnaak da       |\n| ما   | ma     | 3omrena ma hanerga3 |\n\nfor description of the cases where the e is removed from be/we/le/fe,\nsee *shortening*.\n\n## prepositions compound with definite article.\n\n| traditional | Franco | example                   |\n| ----------- | ------ | ------------------------- |\n| من ال       | mel    | mek-ko4k                  |\n| ما ال       | mal    | tamAm TOl mal-balad tamAm |\n| عال         | 3al    | 3al-mA4y                  |\n| وال         | wel    | bel-yoom wel-yoomeen      |\n| لل          | lel    | Ray7a lel-banAt           |\n| في ال       | fel    | fek-konAfa                |\n| ب ال        | bel    | bel-habal                 |\n\nthose prepositions inherit the same rules of the definite article, by\nthat i mean for example \"fel-konAfa\" should be written \"fek-konAfa\".\n\n## demonstrative pronouns\n\n| traditional | Franco | example       |\n| ----------- | ------ | ------------- |\n| دي          | de     | el-betA3a de  |\n| ده          | da     | el-betA3 da   |\n| دول         | dool   | el-betO3 dool |\n\n# shortening\n\nin the Egyptian dialect/language, we tend to not pronounce the first\noccurrence of short vowel in some words, for example sometimes we say\n\"kfaaya\" and sometimes we say \"kefaaya\", in this section i will discuss\nthis phenomena. all the conditions in this section also applies to\nprepositions be/we/le/fe.\n\n## conditions for shortening\n\nwhether shortening will take place or not is governed by the ending of\nthe preceding word, that is, if the ending of the preceding word is one\nof the following three cases, the vowel is deleted,\n\n### ends with a vowel(e,o,a), w or y.\n\nthe most occuring case is if the preceding word ends with a vowel, for\nexample we say \"kefAya keda\" and we say also \"keda kfAya\".\n\nexamples :\n\n  - ana ktir  \n  - ta3aala hnaak  \n  - ya 5SAARA  \n  - ana ndemt  \n  - mahma kbert  \n  - alby m3aak  \n  - ta3aalu nnaam\n\n### ends with two consecutive consonants\n\nanother case where the vowel is deleted, is when the preceding word ends\nwith two consecutive consonants like \"4oft\", \"\", \"esta7melt\".. etc, for\nexample:\n\n  - 4oft ktir  \n  - ro7t l3ebt  \n  - 4a3r TWIL  \n  - 4e3r kwayyes  \n  - la7m r5IS  \n  - 3e4t snin  \n  - 7elm kbir\n\nyou may have noticed that this case is reducible to the first case,\nsince we can't pronounce more than two consecutive consonants (the two\nfrom the end of the word and the first of the following) we add a very\nshort vowel - called epenthetic vowel - at the end of the first word to\nmake it pronounceable, so it becomes \"4ofte ktEr\" which is exactly the\nfirst case.\n\nthis topic is actually more complicated than that, but most of the time\nit's clear for the Egyptian speaker which way to go, don't think about\nit too much.\n\nplease note that in searching franco text we should take into\nconsideration both writings, for example this\n[regex](https://duckduckgo.com/?q=what+is+regex&ia=web) \"ke?tir\" will\nmatch every instance of the word regardless of whether shortening\nhappened or not.\n\n# ending shadda\n\nin compliant Franco some words must end with shadda for reasons\ndiscussed *here*, this shadda appears in three cases (or two actually).\n\n## CvC\n\nfor words that has the shape of (consonant + short vowel + consonant)\nlike \"7OR\" for instance, the last consonant is written as if there a\nshadda at the end, \"7ORR\".\n\nexamples :\n\n  - 7ORR  \n  - 7add  \n  - hezz  \n  - bass  \n  - zayy  \n  - koll  \n  - morr  \n  - sett  \n  - foll  \n  - TOLL  \n  - 3akk  \n  - fann  \n  - lakk  \n  - 3amm\n\nthe middle vowel must be a short one, for example \"kaan\" is not\npronounced \"kaann\".\n\n## something + stop + CvC\n\nsome words doesn't have the shape of CvC, but ends with it preceded by\nbrief stop, for example \"haylef\", those words are pronounced like\n\"hay.lef\" where the dot represent the brief stop. this is practically\nequivalent to pronouncing it as two separate words. here also the shadda\nis added by the same means we added it to \"leff\".\n\nexamples:\n\n  - a7ebb  \n  - ye7ebb  \n  - ma3le44  \n  - ka2enn, akenn  \n  - AMARR  \n  - momell  \n  - betmorr\n\nnote that the stop before the cvc is mandatory for the shadda to appear,\nfor example \"la2et\" ends with CvC but the stop isn't there and so the\nshadda.\n\n## (a,o,e) + consonant\n\nif you remember from the *don't start with \"2\"* section, words that\nstart with \"a\",\"o\" or \"e\", when pronounced they begin with a hidden \"2\",\nso \"omm\" in reality has the shape of CvC, that is, the first consonant\nis the hidden \"2\", the second vowel is \"o\" and the third consonant is\n\"m\", which is exactly the first case.\n\nexamples:\n\n  - omm  \n  - ABB  \n  - A55  \n  - add (add ed-donya)  \n  - OTT  \n  - ayy  \n  - all (el-waga3 all 4wayya)\n\n## rationale behind the shadda at the end\n\nyou may ask the following: what's the problem with writing it without\nthe shadda like \"7or\" or \"bas\" since there is no ambiguity the shadda\nresolves. for two reasons:\n\n1.  the reality is that most people now write unreadable Franco, and\n    most people are used to read unreadable Franco, this caused\n    short/long vowel blindness. for example a word like \"sab\" will be\n    interpreted by most people as \"saab\", but \"sabb\" will be easier for\n    them to read  \n2.  the shadda actually exists if there is a following word, for example\n    \"sabb din\". when you pronounce it you will notice a very short \"e\"\n    after \"sabb\", it will sound something like \"sabbe din\".  \n\n3)consider this sentence - without the shadda at the end - \"haylef ylef\nw yerga3ly\", if you pronounced it in Egyptian Arabic, you will observe\ntwo things:\n\n1.  you shorten \"yelef\" so that it becomes \"ylef\" and you shorten \"we\"\n    becoming \"w\"  \n2.  you pronounce a shadda in both \"haylef\" and \"ylef\"  \n\nbut by the rules of shortening the shortening in \"yelef\" and \"we\"\nshouldn't be there, since the preceding words \"haylef\" and \"ylef\"\nrespectively doesn't end by a vowel nor a two consonants, but if we\nwrote explicitly the shadda observed by pronunciation, the second rule\nof shortening apply (the preceding word ends with two consonants), which\nexplains why the shortening happens. so writing the sentence like this\n\"hayleff yleff w yerga3ly\" just solves every thing.\n\n# Assimilation\n\nAssimilation here is a term for sound changes that occur within a word\nto ease pronunciation, for example \"ganby\" becomes \"gamby\".  \nnot all writing system reflect assimilation in its orthography, but\nsince this writing system relies heavily on phonetics, and wants to be\npredictable and consistent, i choose to reflect it, so the \"right\" way\nto write, e.g. \"zanby\" is \"zamby\", \"anbuba\" is \"ambuba\"\n\n# general notes\n\n## Arabic names\n\nArabic names should not be written in Franco, simply because no one has\nthe right to decide how a name is pronounced other than the name holder\nhimself, but it's ok to write a name in franco if you don't know how\nit's pronounced.\n\nfor example: mohammed mounir not ma7ammad monir.\n\n## e or y in the end\n\nby specifications defined above, y and i in the end have no difference\nand can be used interchangeably, for consistency we will use y. e.g.\n\"siby\" not \"sibi\".\n\n## no place for those\n\ncompliant Franco does not contain any of the following english\ncharacters: \\[q,c,x,u,p,v\\], except in English words or human names.  \nsimilarly the following sequences of characters doesn't appear in\ncompliant Franco: \\[sh,kh,th,gh\\], instead, those characters appear\nhyphenated to prevent confusion, e.g. s-h,k-h,t-h. see *The hyphen*.\n\n## additional shortening cases\n\nin \"we\" the e is deleted when the following word is starts with \"a,o,e\"\n- in addition to the normal conditions of shortening. for example in\n\"a4ky l'mEn w'a7ky l'mEn\" the \"we\" is shortened despite the normal\nconditions of shortening does not hold here, but it's because a7ky\nstarts with \"a\"  \nexamples:\n\n  - haru7 w aagy b SOR3A  \n\n# sample text\n\nit's known that the beauty of a language comes from the beauty of text\nit has been written in. below are different pieces of text written in\ncompliant Franco, that i think are beautiful.\n\n\"ek-kelma deen\" by ahmed foad negm.\n-----\n\nmorr ek-kalaam.. zayy el-7osaam  \nYE2TA3 makaan.. maymorr  \namma el-madi7.. sahl w mori7  \nye5da3 SA7I7.. w y8orr  \nwek-kelma dein.. men 8eir edeen  \nbass el-wafa.. 3al-7orr\n\n-----\n\n## poems by mostafa ibrahem:\n\n-----\n\n9awaa3ed ed-dayra es-saba3a (5):\n\nezzaay te3raf..  \nmin saabe2 min gowwa ed-dayra..  \nw min fiha ATA3 ATWAL ME4WAAR..  \nme4 momken BARDO elly f DAHRAK..  \nYETLA3 sab2ak..  \nw enta elly 7MAAR ?!\n\n-----\n\n9awaa3ed ed-dayra es-saba3a (3):\n\nfar2 ES-SOR3AAT gowwa ed-dayra  \nbeenk we mabeen koll el-ma4yin  \nhowwa elly haye2dar YEDMANLAk  \nen enta t2aabel naas tanyin\n\n# corner cases and limitations\n\n## searchability limiting case\n\ndue to the structure of the Egyptian dialect/language (and human\nlanguages in general) some sentences can be pronounced in multiple ways\nand the writing system can't force one way or the other.\n\nexamples:\n\n  - \"gondy f gonudek\" or \"gondy fe gnudek\"  \n  - \"3aayez anaam\" or \"3ayz anaam\"\n\n## irregularity in the ending shadda\n\n  - \"lak\" in \"ana lak 3ala TOl\", \"lakk\" is another word.  \n  - \"men\" in \"men hena\", \"menn\" is a another word.\n\n# FAQs\n\n## what is the problem with the traditional system?\n\n[this article](/blog/franco/) may answer this\nquestion, and more.\n\n## why this guideline written in English and not in Franco?\n\ni agree this would be a cool idea, but this is an evolving guideline, if\nit is written in Franco, every update in the specification means\nrewriting every thing to be compliant with itself.\n\n## are you working on Franco to replace TAWS?\n\nFranco is just an alternative writing system that can coexist with any\nother writing system. i think Franco is very capable and has more\npotential than TAWS in many situations, like writing modern Arabic\ndialects and bidirectional text(mixed Arabic and English), but compliant\nFranco is not yet near ready for replacing TAWS in writings such as the\nQuran for example. for now we just focus on making a superior system,\nand maybe we can ask this question again later.\n\n# miscellaneous\n\n## independent map of consonants\n\n<pre>\n| manner          | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 |\n| --------------- | - | - | - | - | - | - | - | - |\n| Plosives:       |   |   |   |   |   |   |   |   |\n| \\-\\> unvoiced   |   |   | t |   | k | 9 |   | 2 |\n| \\-\\>\\> emphatic |   |   | T |   |   |   |   |   |\n| \\-\\> voiced     | b |   | d |   | g |   |   |   |\n| \\-\\>\\> emphatic | B |   | D |   |   |   |   |   |\n|                 |   |   |   |   |   |   |   |   |\n| Fricatives:     |   |   |   |   |   |   |   |   |\n| \\-\\> unvoiced   |   | f | s | 4 | 5 |   | 7 | h |\n| \\-\\>\\> emphatic |   |   | S |   |   |   |   |   |\n| \\-\\> voiced     |   | v | z | j | 8 |   | 3 |   |\n| \\-\\>\\> emphatic |   |   | Z |   |   |   |   |   |\n|                 |   |   |   |   |   |   |   |   |\n| the R-sound     |   |   | r |   |   |   |   |   |\n| \\-\\>\\> emphatic |   |   | R |   |   |   |   |   |\n|                 |   |   |   |   |   |   |   |   |\n| the L-sound     |   |   | l |   |   |   |   |   |\n| \\-\\>\\> emphatic |   |   | L |   |   |   |   |   |\n|                 |   |   |   |   |   |   |   |   |\n| Nasals          | m |   | n |   |   |   |   |   |\n| \\-\\>\\> emphatic | M |   |   |   |   |   |   |   |\n|                 |   |   |   |   |   |   |   |   |\n| Semi-vowels     | w |   |   | y |   |   |   |   |\n</pre>\n\nwhere the numbered columns represent the place of articulation:\n\n  - 1= with both lips  \n  - 2= with the lower lip against the upper teeth  \n  - 3= with the tip of the tongue against the back of the teeth  \n  - 4= with the back of the tongue against the hard palate  \n  - 5= with the back of the tongue against the soft palate  \n  - 6= with the back of the tongue against the uvula  \n  - 7= in the pharynx  \n  - 8= in the glottis (glottal)\n","data":{"title":"compliant franco","githubrepo":"https://github.com/saadnpq/compliant-franco","description":"suckless, standardized, documented and eloquent Arabic writing system","date":"2019-03-01T00:00:00.000Z","tags":["writing systems","Arabic","linguistics"]},"isEmpty":false,"excerpt":""},{"content":"\nbasis of evolution\n==================\n\nthe elegance and beauty of evolution is that it didn't introduce\nanything we didn't know before about nature, it just tells us that\ngiven some observable facts we should have got it very long ago.\n\nthose observable facts are represented in the following sub-sections.\n\nnatural pressure\n----------------\n\nnature always puts pressure on us, and always introduces challenges we\nhave to overcome to survive.\n\nranking\n-------\n\nwe are not all the same in the eyes of nature, different animals are\nawarded or punished based on how they perform in life challenges.\n\ninheritance\n-----------\n\nany new born baby gets his traits constructed from his parent's traits,\nnot all traits are hereditary traits though, but those don't contribute\nto biological evolution so they are irrelevant here\n\nnatural mutations\n-----------------\n\nthe randomness salt in the gene soup.\n\nit happened many times that a child has been born without a sexual\norgans or maybe deformed ones, since obviously this couldn't be\ninherited, it has to be a completely new gene introduced in this poor\nbaby\n\nmutations are very crucial in the evolution mechanism, you can consider\nit the experimentation ground of species, a field of trying new ideas\nand testing them by putting them into action.\n\nsexual selection\n----------------\n\nif a new trait is beneficial in many ways, but not sexy enough to\nattract the opposite sex to reproduce new beings with this trait, it\nwill die young. on the other hand a new trait may succeed only because\nit attracts the other sex regardless of how beneficial it is on other\naspects.\n\nbut i should say here that's sexual selection and natural selection\naren't always independent, for example healthy males are more\nattractive in females eyes, that's because nature selected females who\nselect those males, as those females produce healthy children\n\nGeographical isolation\n----------------------\n\nfor two groups to develop new traits in different directions they must\nbe physically apart, or in the jargon there must be two gene pools. this\nhappens in nature in several ways, but the primary cause is natural\ndisasters.\n\nwhat are Species\n================\n\nfrom Wikipedia\n\n> In biology, a species is the basic unit of classification and a\n> taxonomic rank, as well as a unit of biodiversity, but it has proven\n> difficult to find a satisfactory definition. Scientists and\n> conservationists need a species definition which allows them to work,\n> regardless of the theoretical difficulties\n\nspecies are actually just an arbitrarily chosen unit for biodiversity,\nor a measure of disparity or unlikeness. there is no natural distinction\nbetween differences between individuals and differences between species\nother than that differences between species are much more.\n\nwhy proving one trait is enough\n-------------------------------\n\nfor some reason the idiotic idea that says evolution is true inside the\nsame specie but not true outside it has found its way into some\npeople's mind. apparently its nothing more than a last try to keep\nsomething for god while superficially believing in evolution.\n\nby the definition in *the previous section *, if evolution is true for\none trait, the process by necessity will lead to speciation.\n\nreproducing the nature\n======================\n\nthe past sections was an introduction but in this section we will\ndiscuss the code in some detail.\n\nanimals\n-------\n\nwhat we need is some sort of a data type that will simulate the concept\nof animals by having the relevant attributes real animals have, such as\nage, some form of genetic code, parents, sexual abilities, gender, and a\ngeographical location.\n\nyou guessed it, a python class.\n\n{{< highlight python >}}\n\n# global constants\nDNA_LOW = 0   # minimum DNA value\nDNA_HIGH = 11 # maximum DNA value\nDNA_LEN = 5 # how many cells in each DNA array\nISLANDA_TYPICAL = 8  #the trait islandA demand\nISLANDB_TYPICAL = 2  #the trait islandB demand\nINITIAL_POPULATION_NUMBER = 10\nNUMBER_OF_GENERATIONS = 15\nMAX_POPULATION = 40000 \n# just to save time cause mating the whole population after 4000 will take ages\n\n# some calculation constants\nEXP = 2\nFACTOR = 1/8\ntranslate = lambda rank: int((rank**EXP)*FACTOR)\n\nclass JesusException(Exception):\n    \"\"\" raised whenever a child is born without a father \n(this will not be raised actually its just a joke :D)\n\"\"\"\n    pass\n\ndef calc_rank(dna, typical):\n    rank = sum(abs(dna - typical))/DNA_LEN\n    return 8-rank\n\n\nclass Animal():\n    def __init__(self, island, mom=None, dad=None):\n\n        if (dad is None) and (mom is None):\n            # generation zero\n            self.dna = np.random.randint(DNA_LOW, DNA_HIGH, DNA_LEN)\n        elif (dad is not None) and (mom is not None):\n            midpoint = int(DNA_LEN/2)\n            self.dna = np.append(dad.dna[:midpoint], mom.dna[midpoint:])\n            random_index = np.random.randint(DNA_LEN)\n            self.dna[random_index] = np.random.randint(DNA_LOW, DNA_HIGH)\n        else:\n            raise(JesusException)\n\n        if island == 'A':\n            self.rank = calc_rank(self.dna, ISLANDA_TYPICAL)\n        elif island == 'B':\n            self.rank = calc_rank(self.dna, ISLANDB_TYPICAL)\n\n        self.island = island\n        self.dad = dad\n        self.mom = mom\n        self.gender = np.random.randint(2) # 0 male 1 female\n        self.power = translate(self.rank)\n        self.time =  translate(self.rank)\n\n{{< /highlight >}}\n\nfirst we define some global constants (not all of those makes sense just\nyet but they will soon).\n\nnext we define the Jesus exception and the calc~rank~ function. see *DNA\nand ranking* .\n\nthe animal class code is mostly straight forward except for few points:\n\n-   we permit that an animal can exist without parents because we have\n    to start with initial population which has animals of self.mom and\n    self.dad equals None\n-   the animal parents self.mom and self.dad are both of type animals\n    and have the same set of attributes (every one of them has his\n    self.mom and self.dad).\n-   self.power represents sexual power self.time represent longevity\n    (yeah poor naming).\n-   island A and island B represent the geographical isolation. see*\n    reproducing Geographical isolation*.\n-   there is things i will explain later in this document sometimes you\n    will need to get back here to see the class definition, i will\n    points to this section whenever needed.\n\n### DNA and ranking\n\nin reality DNA can be simplified as a list of numbers, and that's what\nwe will do exactly, we will assign every animal an attribute self.dna\nwhich holds bunch of numbers, this list can be of any length\ntheoretically but it is constrained by the computational power you have.\nfor me i found that a list of 5 will output in a sensible time, if you\nhave a more powerful machine you can increase DNA~LEN~ to the value you\nwant.\n\nthe range of numbers any cell can holds can be arbitrarily chosen as\nwell. i choose a range from 0 to 11\n\nthe picture here is as follows:\n\nevery animal has associated list. say animalA has DNA \\[1, 4, 3, 1, 9\\]\nand animalB has DNA \\[7, 3, 5, 8, 8\\]. based on those numbers we will\ncompute how this animal is functioning, but before that we have to\nattach a meaning for those number, or way to say whether \\[1, 4, 3, 1,\n9\\] will perform more than \\[7, 3, 5, 8, 8\\]? and why?. so we have to\nintroduce the rank\n\nwe can choose any mathematical relation between those number to compute\nthe rank, but for the sake of simplification we will say that for a\ncertain environment there is a typical number for example 7, and based\non how far each cell from that number is, we will decide how this animal\nwill perform.\n\nso based on that definition and using the previous animal examples A and\nB, animalB will perform better than animalA in that environment because\n\\[7, 3, 5, 8, 8\\] has cells which are closer to 7 (sum of differences)\nthan the cells of \\[1, 4, 3, 1, 9\\]. we represent that mathematically by\ngiving animalB a rank higher than animalA\n\nif there is another environment that demand the number 5, animalA will\nperform better therefor it will have higher rank than animalB. its\nimportant to understand that the rank is local to the environment, there\nis no such thing as an absolute rank (as in real life).\n\nhere is the definition of calc~rank~ function:\n\n{{< highlight python >}}\ndef calc_rank(dna, typical):\n    rank = sum(abs(dna - typical))/DNA_LEN\n    return 8-rank\n{{< /highlight >}}\n\nthis equation just translate the sentence \\\"how far the cells are from\nthe typical number\\\" to a number.\n\n### reproducing mutations\n\nlets look closer to this code snippet\n\n{{< highlight python >}}\nelif (dad is not None) and (mom is not None):\n    midpoint = int(DNA_LEN/2)\n    self.dna = np.append(dad.dna[:midpoint], mom.dna[midpoint:])\n    random_index = np.random.randint(DNA_LEN)\n    self.dna[random_index] = np.random.randint(DNA_LOW, DNA_HIGH)\n{{< /highlight >}}\n\nthis code is responsible for computing the new born dna from the dad's\nand mom's by taking half the mom's dna and half of the dad's and\nattaching them end to end, pretty much exactly what happens in real\nlife.\n\nbut after that it takes one cell and randomly alter it, to emulate the\nmutation process discussed in *natural mutations*.\n\n### reproducing Geographical isolation\n\nfor the evolution process to take place there must be a geographical or\nenvironmental isolation, that's why i defined a self.island attribute\nto store the home of each animal, the island variable is given to the\nanimal constructor at creation time.\n\nevery island has its own typical value, hence the constants\nISLANDA~TYPICAL~=8 and ISLANDB~TYPICAL~=2.\n\n### initial population and mean\n\nthe first thing we do in every trial we initiate a population of size\nINITIAL~POPULATIONNUMBER~.\n\n{{< highlight python >}}\npopulationA = [Animal('A') for i in range(INITIAL_POPULATION_NUMBER)]\npopulationB = [Animal('B') for i in range(INITIAL_POPULATION_NUMBER)]\nmeans = [get_mean_vals(populationA, populationB)]\n{{< /highlight >}}\n\n\nthen calculate the mean values using the function get~meanvals~\n\n{{< highlight python >}}\ndef get_mean_vals(populationA, populationB):\n    dnaA = np.concatenate([animal.dna for animal in populationA])\n    dnaB = np.concatenate([animal.dna for animal in populationB])\n    return np.mean(dnaA), np.mean(dnaB)\n{{< /highlight >}}\n\n### translating rank to sexual power and longevity\n\nto estimate how long the animal will live and how many babies it will\ngive every mating season, we will use of course the rank. the exact\nrelation between rank and longevity can be anything as long as they are\ndirectly proportional.\n\n# some calculation constants\n{{< highlight python >}}\nEXP = 2\nFACTOR = 1/8\ntranslate = lambda rank: int((rank**EXP)*FACTOR)\n{{< /highlight >}}\n\ni used an exponential relation to speed up things a little bit, cause\nagain its a matter of computational power.\n\nand in the animal class definition\n\n\n{{< highlight python >}}\nself.power = translate(self.rank)\nself.time =  translate(self.rank)\n{{< /highlight >}}\n\nmating and mating season\n------------------------\n\nthe mating function is fairly straight forward.\n\n{{< highlight python >}}\ndef mate(couple):\n    mama,papa = couple\n    babies_number = min(mama.power, papa.power)\n    return [Animal(mama.island, mom=mama, dad=papa) for i in range(babies_number)]\n{{< /highlight >}}\n\ncouple is a tuple of male and a female. there is a function called\ncreate~couples~ that takes a list of males and a list of females and\nreturn a list of couples. this function discussed in the next section.\n\n### reproducing sexual selection\n\ni really didn't simulate the independent sexual selection, i reused the\nrank to sort males and females and make the high ranked females choose\nthe high ranked males. maybe sometime in the future i will write a\nseparate rank for sexual selection and see how things will go.\n\n{{< highlight python >}}\ndef create_couples(females, males):\n    \"\"\" takes sorted females and males by rank k \"\"\"\n    couples  = []\n    married_men = set()\n    for female in females:\n        for male in males:\n            if (not haram(female,male))and(male not in married_men) :\n                couples.append((female,male))\n                married_men.add(male)\n                break\n    return couples\n{{< /highlight >}}\n\nthe haram function returns true if the males or females are direct\nrelatives.\n\n{{< highlight python >}}\ndef haram(female, male):\n    return (male == female.dad) or (male.mom == female) \\\n            or ((male.mom == female.mom) and \\\n                  (male.dad == female.dad) and male.mom is not None)\n{{< /highlight >}}\n\n### mating season\n\n{{< highlight python >}}\ndef mating_season(population):\n    kill_whos_time_has_come(population)\n    decrement_time(population)\n    females = [ animal for animal in population if animal.gender]\n    males = [ animal for animal in population if not animal.gender]\n\n    females = sorted(females, key = lambda f: f.rank)\n    males = sorted(males, key = lambda m: m.rank)\n\n    couples = create_couples(females, males)\n    babies = []\n    for couple in couples:\n        babies += mate(couple)\n    population += babies\n{{< /highlight >}}\n\nthe mating~season~ function takes the whole population and does three\nthings:\n\n1.  kills who's time has come.\n2.  decrements time of the whole population\n3.  separates the population into males and females\n4.  sort males and females by rank\n5.  create couples using function create~couples~\n6.  mates every couple\n7.  adds the resulting output to the population\n\n### the main loop\n\nthe main logic of the program is a loop of infinite trials, in every\ntrial we make the following:\n\n1.  construct the initial population.\n2.  do some printing to stdout.\n3.  keeps track of how the mean values changes over time.\n4.  calls the mating~season~ function for every island\n    NUMBER~OFGENERATIONS~ times and stops whenever the population\n    exceeded MAX~POPULATION~.\n5.  produces the graphical plots.\n\n{{< highlight python >}}\nif __name__ == '__main__':\n    ntrials = 0\n    while True:\n        print(f'-------------trial{ntrials}-------------')\n\n        populationA = [Animal('A') for i in range(INITIAL_POPULATION_NUMBER)]\n        populationB = [Animal('B') for i in range(INITIAL_POPULATION_NUMBER)]\n        means = [get_mean_vals(populationA, populationB)]\n\n        print('generation zero: ')\n        print('the mean of population A dna', means[0][0])\n        print('the mean of population B dna', means[0][1])\n\n        iA, iB = 0, 0\n        for i in range(NUMBER_OF_GENERATIONS):\n            if len(populationA) < MAX_POPULATION:\n                mating_season(populationA)\n                iA += 1\n            if len(populationB) < MAX_POPULATION:\n                mating_season(populationB)\n                iB += 1\n            means.append(get_mean_vals(populationA, populationB))\n\n        ntrials += 1\n\n        print(f'after {min(iA,iB)} generations: ')\n        print('the mean of population A dna', means[i][0] )\n        print('the mean of population B dna', means[i][1])\n        print('with diff ',  means[i][0] - means[i][1])\n\n        plot_means(means)\n{{< /highlight >}}\n\noutput\n======\n\nrunning the program on my machine for four trails outputted the\nfollowing\n\n``` {.example}\n-------------trial0-------------\ngeneration zero: \nthe mean of population A DNA 4.84\nthe mean of population B DNA 5.02\nafter 11 generations: \nthe mean of population A DNA 6.290029719380465\nthe mean of population B DNA 3.46341901890929\nwith diff  2.826610700471175\n-------------trial1-------------\ngeneration zero: \nthe mean of population A DNA 5.6\nthe mean of population B DNA 4.42\nafter 10 generations: \nthe mean of population A DNA 6.393710352525346\nthe mean of population B DNA 3.8421905942027306\nwith diff  2.5515197583226157\n-------------trial2-------------\ngeneration zero: \nthe mean of population A DNA 4.54\nthe mean of population B DNA 4.34\nafter 11 generations: \nthe mean of population A DNA 6.22569350853549\nthe mean of population B DNA 3.8069981517701734\nwith diff  2.4186953567653164\n-------------trial3-------------\ngeneration zero: \nthe mean of population A DNA 4.98\nthe mean of population B DNA 4.98\nafter 12 generations: \nthe mean of population A DNA 6.239204199278249\nthe mean of population B DNA 3.901722968389635\nwith diff  2.337481230888614\n```\n\nhere we clearly see that the mean value of DNA cells in the initial\npopulation is approximately the same across both islands, but by letting\nthem reproduce for a number of generations the means in islandA (which\ndemands cells close to 8) shifted towards 8, while means in islandB\n(which demands 2) shifted towards 2.\n\nplots of those trials gives a better picture of how the means change\novertime rather than comparing the initial and final means.\n\nhere are plots of some trials.\n\n![](/images/output-sample/trial1.png) ![](/images/output-sample/trial2.png) ![](/images/output-sample/trial3.png)\n![](/images/output-sample/trial5.png) ![](/images/output-sample/trial6.png) ![](/images/output-sample/trial7.png)\n","data":{"title":"evolve","githubrepo":"https://github.com/saadnpq/evolve","description":"a simple mathematical representation of the evolution theory","tags":["biology","math","python"],"date":"2018-02-04T00:00:00.000Z"},"isEmpty":false,"excerpt":""},{"content":"\n## abstraction\n\n### the nature of the language\n\nhumans like any other animal have a way to send signals to each other by\nthe means of sound. our brain utilizes our ears and mouth to form a\ncommunication channel by encoding entities in nature to a conventional\nverbal sounds. this whole thing we call it now \"the language\" - in the\nEnglish language, or more precisely \"the spoken language\".\n\n### the nature of writing systems\n\nbetween 3400 and 3300 BC in sumar humans invented the most important\ninvention in the history (its actually the invention that defined the\nbeginning of history), the writing system. this is yet another\ncommunication channel in which our brain this time utilizes our eyes and\nhands to form it.\n\nthe writing system is very different than the spoken language in its\nnature. our brain treats those two communication channels differently.\nwe often falsely (but understandably) include the writing system in the\ndefinition of the language. it's known that learning speaking and\nlistening in a new language is a different skill than writing and\nreading it, and require different training. due to this natural\ndistinction, the writing systems of languages evolved independently.\nactually so many languages didn't have any writing system until\nrelatively recently (like Arabic for instance).\n\nwhat i want to emphasis from this section is one thing, the writing\nsystem is **not** the language itself, and they are mostly independent\nfrom each other, some languages have multiple writing systems (e.g.\nHindi and Urdu). some writing systems are used in multiple languages, as\nthe Arabic writing system used for writing languages other than Arabic\nlike Persian, Kurdish, and Urdu (Arabic was also used to write Spanish\nuntil the 16th century).\n\n## categories of writing system\n\n### phonetic based\n\nin phonetic based systems every letter represent a speech sound, like\nalphabetical languages (e.g. all Latin languages) or abjadic languages\n(e.g. Arabic and Hebrew).\n\n### syllabaries or logographies based systems\n\nin those systems each character represents a word or part of a word\n(e.g. Chinese and Egyptian hieroglyphs)\n\n### mixed\n\nsome writing systems has both types. for instance Japanese has letters\nthat represents sounds and also uses some Chinese characters in its\nwriting system.\n\n## character set and encoding\n\nbefore we continue we have to agree on the meaning of some words that\nwill come up often in this discussion.\n\n### character set\n\na character set is the collection of symbols that's used in a writing\nsystem. for example, a to z is character set of 26 symbols. while a to z\n+ A to Z is another character set with 52 symbols. some writing systems\nus character sets with thousands of symbols like Chinese. different\nwriting systems can share one character set or borrow some symbols from\nanother writing system's character set.\n\n### encoding\n\nlong time after humans invented writing systems. it was the time for\ninventing the second most important invention in history, computers. how\ncomputers work demands another layer of encoding, encoding the symbols\nin a character set to ones and zeros. this layer forms a communication\nchannel between we - humans - and computers.\n\n### ASCII\n\nASCII is character set and encoding that consists of 128 symbols {a-z +\nA-Z, 0-9, punctuations}, i.e. everything you can see on English\nkeyboard. it's the most simple, efficient and supported character set\nknown till now.\n\n### the Arabic character set\n\nthe character set of Arabic can consists of (at least) the following\nsymbols: \\! \" \\# $ ٪ & ' () ٭ + ، - . / ٠ ١ ٢ ٣ ٤ ٥ ٦ ٧ ٨ ٩ : ؛ \\<=\\> ؟\nء آ أ ؤ إ ئ ا ب ة ت ث ج ح خ د ذ ر ز س ش ص ض ط ظ ع غ \\[\\] ـ ف ق ك ل م ن\nه و ى ي ً ٌ ٍ َ ُ ِ ّ ْ ٱ ٰ ٬ ” “ Arabic charset shares some symbols\nwith ASCII which is the source of many problems regarding reordering in\nmixed text. the Arabic charset has another point of complexity, which is\nhow symbols are displayed on screen. for example the character غ is\nnever displayed as you see it standing alone in Arabic text, basically\nit changes its shape according to where it appeared in the word\n(initial, medial, final) and also according to the letter before it and\nafter it. Some letters would have more than eight glyphs (shapes) in\nsome writing styles. and almost every character in Arabic behaves this\nway. the total number of glyphs in traditional printing exceeds four\nhundred in many typefaces.\n\n## the problem\n\n### mixed text\n\nsince writing mixed English and Arabic is inevitable for Arabic speakers\nin the world we live in now, the inherently problematic bidirectional\ntext scenario arises more often bringing with it all kinds of headaches.\n\nevery text is stored electronically as a string of characters, writing\nRTL (Right To Left) or LTR doesn't change the order those characters are\nstored internally. the software displaying the string is responsible for\ncorrectly computing the relevant position of the next character on the\nscreen based on whether or not this characters and the character\npreceding it belongs to an RTL character set.\n\nif you are an Arabic speaker you know the frustration of reading or\nediting bidirectional text on nearly any software.\n\nsome of the ways things can go wrong are:\n\n  - numbers inside RTL (specially if there is a number at the end or the\n    beginning of a line or there is a number at a direction switch)\n  - highlighting text with mixed directions\n  - wrapping text on multiple lines\n  - adding a comma on a direction switch\n  - enclose text in parenthesis (or any mirrored characters like\n    \"\\<,\\[,{\")\n  - specifying the base direction\n\nyou can see\n[this](https://www.w3.org/International/articles/inline-bidi-markup/uba-basics)\nfor an introduction to the bidi algorithms and its limitations.\n\nanother problem is keyboard mappings, if you are a keyboard oriented\nperson as most power users, changing keyboard layout while editing will\ndisable all your keyboard shortcuts making editing more and more and\nmore difficult.\n\n## solutions\n\nthere are two solutions people are migrating to.\n\n### all English\nthis is great solution and it shortens the way to the inevitable end of one universal language. but this will not happen in our life time or even in our childern's life time. until then arabic will be used and trying to avoid it in all written text is basically impractical.\n\n### Writing Arabic Using Latin Characters\n\nthis solution is traced back to the time email and cell phones didn't\nsupport Arabic. users back then used to send Arabic written in English\nalphabet as an ad hoc solution. this method of writing used to have many\nnames: Araby, Arabizi, Mu'arrab, and Franco-Arabic. i will refer to it\nsimply as Franco as we call it in Egypt.\n\nbut way before that there was proposals to replace the Arabic letters\nwith Latin ones. the first recorded one was by Wilhelm Spitta in 1880 in\nhis book \"Vulgardialectes von Agypten Grammatik des Arabischen \\[The\nRules of Slang Arabic in Egypt\\]\" in which he suggested using Latin\ncharacters to write the Egyptian slang. There were many other supporters\nfor this proposal during the following forty years. Among them was Abdul\nAziz Fahmi who proposed a full practical scheme in response to a\ncompetition organized by the Academy of the Arabic Language in Cairo.\nOther supporters of Fahmi’s proposal, including Sa’id ‘Aqil and Anis\nFreha developed their own proposals. They found additional support in\nTurkey, where Kamal Ataturk ordered the adoption of English characters\nto write Turkish instead of the Arabic characters in 1928.\n\nthose academic proposals didn't have any influence over the design and\nadoption of Franco, but rather it's developed organically over time by\nsociety, it got a lot of adoption among new generations to the point\nwhere google added Franco as one of its supported input methods in 2012\n(but dropped it later due to Anti-Franco campaigns). it has been, in\nformal and informal daily use communication, entertainment, social\nmedia, signs and flyers, or even in students' writing books. i must say\nalso that Franco wasn't a way of romanization of Arabic (which is a way\nof writing Arabic names and titles in Latin alphabet to be pronounced by\nEnglish speakers). Franco meant to be a system for Arabic speakers to\ncommunicate with each other in Arabic.\n\n#### characteristics of common Franco.\n\n1.  Franco only uses the ASCII charset(i.e. does not use Latin symbols\n    as é or á).\n2.  the Franco system is contextual.\n3.  The traditional Arabic vocalization marks are substituted by vowels.\n    The \"fatha\" by a; the \"kasra\" by i or e; and the \"damma\" by u, ou,\n    or o.\n4.  The Franco system differs for every Arabic country, depending on the\n    local dialect. for example, in countries which french is its second\n    languages, \"ch\" is used to write the Arabic letter \"sheen\" instead\n    of \"sh\".\n5.  numbers are used to represent Arabic characters that can't be\n    written using the ASCII. numbers are chosen based how similar the\n    number is to the letter represented. for example, the letter ح\n    represented by 7; the letter ء represented by 2 (the same shape\n    mirrored); the letter ع represented by 3.\n\n## war against Franco\n\nFranco has always been fought and severely criticized by Arab\nnationalists and Muslim enthusiasts, who considered it as a direct\nattack on the Arabic identity. They also saw it as a threat to the\nQuran, which is written in classical Arabic using a writing system that\nhas lasted for more than fourteen centuries. Islamic and Arabic scholars\nstarted a series of Anti-Franco campaigns around the Arab world.\nAnti-Franco was the main theme of World Arabic Language Day 2014 .\nGoogle as well stopped from supporting Franco and removed it from their\nlanguage tools. Arabic experts reactions to Franco are typically quite\nnegative, even when they themselves employ it sometimes. They emphasize\nthe use of the traditional writing system and marginalize the efforts of\nstudents to use alternative forms of writing Arabic.\n\nmost Anti-Franco arguments has political, religious and racial\ncomponents new generations are free of. they also come from a\nmisunderstanding of the difference between a language and its writing\nsystem. i see the adoption of Franco is a healthy thing for the Arabic\nlanguage. i love Arabic; i think in Arabic, and i will continue to think\nin Arabic to the end of my life. but Franco for me is a way to express\nmyself **in Arabic** without all the hassle traditional writing brings\nin.\n\n### rational criticism\n\nrational people who are not used to read or write Franco will criticize\nFranco as it's hard to read, of course using a new writing system\nwouldn't come without a learning curve. its not fair to compare the ease\nof Franco to a writing system people taught in school for years. suppose\nFranco taught in schools and someone introduced you to the traditional\nsystem, would you find it easier?.\n\ni didn't see any criticism outside that it is hard to read. if you have\nanother point against Franco please send it to me and i will include it\nin this section.\n\n## the future of Franco\n\nuntil now i think Franco refuses to die despite everything, Arabs are\nstill using it heavily in chats, but the public domain doesn't reflect\nthis internal adoption. we need new studies to measure Franco use in\ndifferent geographic areas. i came across some studies done in Saudi\nArabia with ranging results from medium to high usage among teens. i\nclaim that if similar studies made in countries like Egypt, Morocco,\nLebanon or Jordan the studies will have significantly different results\ntowards very high usage.\n\nlike any organically grown idea, most of the design choices in the\ncommon Franco we write today has some form of a hidden wisdom inside of\nit, but has some weak aspects as well. if we are serious about\ndeveloping a writing system, there must be an intelligent driving force\nthat maintains some standard or a guideline. i didn't find one yet, but\ni am working on one [here](/projects/compliant-franco/). i am\nplanning also to visit a linguistic college and see how people there\nthink about this and maybe try to convince some students to maintain the\nproject further in a scientific manner. if you are interested or want to\ncontribute any thing in any form (even a criticism would help in some\ndecisions) please contact me.\n\n## References\n\n  - Yaghan, M. A. (2008). “Arabizi”: A Contemporary Style of Arabic\n    Slang. Design Issues, 24, 39-52.\n    <http://dx.doi.org/10.1162/desi.2008.24.2.39>\n  - Kenali, A. M. S., Yusoff, N. M. R. N., Kenali, H. M. S., &\n    Kamarudin, M. Y. (2016). Code-Mixing Consumptions among Arab\n    Students. Creative Education, 7, 931-940.\n    <http://dx.doi.org/10.4236/ce.2016.77097>\n  - Egyptian Romanized Arabic\n    <https://www.duo.uio.no/bitstream/handle/10852/24250/Bjoernsson_master.pdf?sequence=1&isAllowed=y>\n  - <http://www.bbc.com/arabic/scienceandtech/2012/12/121220_arabic_language_internet_arab_days.shtml>\n  - <https://www.arabamerica.com/google-adds-arabiziarabic-translation-to-its-input-tools-language-support/>\n  - <https://en.wikipedia.org/wiki/Arabic_chat_alphabet>\n  - <https://en.wikipedia.org/wiki/Writing_system>\n","data":{"title":"the Arabic writing system problem","date":"2019-01-01T00:00:00.000Z","description":"a deep dive into the problems that face the traditional Arabic writing system, and how we can change it.","tags":["research","writing systems","Arabic","linguistics"]},"isEmpty":false,"excerpt":""},{"content":"matrixcli is a simple [matrix](https://matrix.org/blog/home/) client\nbased on the\n[matrix-python-sdk](https://github.com/matrix-org/matrix-python-sdk). if\nyou wonder how this is useful please see\n[applications](#applications)\n\ninstallation\n============\n\nyou can install matrixcli using setup.py in root project directory. This\nwill also install all needed dependencies.\n\n``` {.shell}\ngit clone https://github.com/saadnpq/matrixcli.git\ncd ./matrixcli \nsudo ./install.sh\n```\n\nthis will put the matrixcli script in your path, install a template\nconfig.py file in /etc/matrixcli and systemd unit file in\n/lib/systemd/user\n\nfor ubuntu users you have to install python3-setuptools first before\nrunning the above commands\n\n``` {.shell}\nsudo apt install python3-setuptools\n```\n\nto enable the systemd service you can run the following.\n\n``` {.shell}\nsystemctl --user enable --now matrixcli\n```\n\nconfiguration file\n==================\n\nthe account configuration is done through the config.py file in either\none of the following locations sorted by precedence\n\n1.  custom file specified using the -c option\n2.  \\$HOME/.config/matrixcli\n3.  /etc/matrixcli\n\nthis is a one account sample configuration.\n\n``` {.python}\ndef password_eval():\n    return \"Y0UrPredIctabLePA$$w0ord\"\n\naccounts=[{ \"server\":\"https://matrix.org/\",\n              \"username\":\"putYourUserNameHere\",\n              \"passeval\":password_eval }] \n\n# the password_eval function can be named any thing as long as \n# it matches the function definition \n\nignore_rooms = [\"room_id\", \"another_room_id\"] \n# note: room_id not room_alias (run matrixcli rooms to get the room_id)\n\n```\n\nthe configuration file should have an `accounts` variable which holds a\nlist of dictionaries where every dictionary consists of the account\ninformation server, username and password eval\n\nthe rationale behind defining a function that returns the password value\nis that if you don\\'t want to write your password in plain text you can\nwrite any python code you wish that generates or reads the password from\nan encrypted file or a key ring\n\nthe ignore~rooms~ list contains rooms that you want to be ignored when\ncalculating unread messages and in listen mode\n\nif you don\\'t want to make a configuration file at all, you can pass the\nserver, username and password through command line arguments. see\n*usage*\n\nmulti account configuration\n---------------------------\n\nsuppose you have the following configuration file\n\n``` {.python}\ndef account1_password_eval():\n    return \"account1secretpassword\"\n\ndef account2_matrixorg_password_eval():\n    return \"account2secretpassword\"\n\ndef account3_password_eval_any_name():\n    return \"yXkdsjhslkjhdlksjhffffffkkssskjsdhkljhssdc\"\n\naccounts=[\n\n        { \"server\":\"https://example.com\",\n          \"username\":\"account1\",\n          \"passeval\":account1_password_eval },\n\n        { \"server\":\"https://matrix.org\",\n          \"username\":\"account2\",\n          \"passeval\":account2_matrixorg_password_eval},\n\n        { \"server\":\"https://example.com\",\n          \"username\":\"account3\",\n          \"passeval\":account3_password_eval_any_name },]\n\nignore_rooms = [\"room_id\", \"another_room_id\"] \n```\n\nif you didn\\'t specify any command line option, the program will use the\nfirst account in the accounts list. to use any other account its enough\nto pass the -u or --username option to the command with the username of\nthat account.\n\nfor example\n\n``` {.shell}\nmatrixcli -u account3 getrooms\n```\n\nthat command will login with the parameters of the third account.\n\nif you have two or more accounts with the same username but with\ndifferent servers. you can specify the --server option to norrow down\nthe possible accounts to the account you want.\n\napplications\n============\n\nbelow are the ways i personally use matrixcli,\n\ndesktop notifications\n---------------------\n\nthe first motive to make this program was that i didn\\'t want to keep\nriot webpage open or to run an electron app just for notifications.\n\nyou can enable the systemd service, to get notifications for events as\nthey come.\n\n``` {.shell}\nsystemctl --user enable --now matrixcli\n```\n\n![](/images/screenshots/notifications.png)\n\nstatus bars\n-----------\n\nusing `matrixcli unread` you write a module for any status bar to\ndisplay unread messages. here is a simple example for polybar\n\n``` {.yaml}\n[module/matrix]\ntype = custom/script\nexec = matrixcli unread -f 2> /dev/null\ntail = true\ninterval = 30\nformat = <label>\nlabel = M[%output%]\nformat-underline = #268bd2\n```\n\n![](/images/screenshots/polybar.jpg)\n\nM\\[6\\] here indicates 6 unread messages\n\nsendmail for matrix\n-------------------\n\nfor example i have this cron job that sends every day a random song from\nmy music directory to a specific room.\n\n``` {.shell}\n0 0 * * * /usr/local/bin/matrixcli send -r '!OSPeUVrwMKbIrLQuBX:matrix.org' $(tree /home/pi/musiqa -fi | grep \".*.mp3\" | shuf | sed 1q)\n```\n\nand i use it in many scripts on remote servers to notify me about a\nscript output or just when something goes wrong.\n\nhow to use\n==========\n\nfor a list of the subcommands and options run\n\n``` {.shell}\nmatrixcli --help \n```\n\noutput:\n\n``` {.example}\n#usage: matrixcli [-h] [-s SERVER] [-u USERNAME] [-p PASSWORD] [-c CONFIG]\n                 {send,listen,rooms,unread,tail} ...\n\ncommand line matrix client\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SERVER, --server SERVER\n                        server to login to\n  -u USERNAME, --username USERNAME\n                        username to login with\n  -p PASSWORD, --password PASSWORD\n                        the password\n  -c CONFIG, --config CONFIG\n                        custom configuration file\n\nsubcommands:\n  {send,listen,rooms,unread,tail}\n    send                send something to a room\n    listen              listen forever for events\n    rooms               get all joined rooms\n    unread              get unread notifications\n    tail                print last messages\n```\n\nto list the options of a specific sub command, (e.g. send)\n\n``` {.shell}\nmatrixcli send --help \n```\n\nrooms\n-----\n\nevery sub-command that supposed to act on a specific room accepts the\n-r/--room-id optional argument which takes the room-id to act upon, or\n-a/--room~alias~ which takes a room alias.\n\nto get a room-id of a room run:\n\n    matrixcli rooms\n\noutputs the following (for my account).\n\n``` {.example}\nlogging in ....\nlogged in ....\n0 : momenamr : !ocOmULdomkoJWYzXts:matrix.org\n1 : mahmoudhafez : !fCXcmULzIohNQomvXD:saadnpq.com\n2 : Emacs Matrix Client : !ZrZoyXEyFrzcBZKNis:matrix.org\n3 : elm3alem zaki : !OaBjEnLTTVqGpqrPES:matrix.org\n4 : matrix-python-sdk : !YHhmBTmGBHGQOlGpaZ:matrix.org\n5 : Emacs : !PWxnIIDhCBAbNItsSN:matrix.org\n6 : moatazomar : !LsBUkYVYJignwCpACn:saadnpq.com\n```\n\nif you didn\\'t specify the room-id or room-alias through the command\nline, the program will prompt you with your joined rooms when it needs\nto.\n\nlisten\n------\n\n``` {.shell}\nmatrixcli listen\n```\n\nlistens forever for events and outputs incoming messages to both stdout\nand os notifications, if you are running this command on a headless\nsystem or the program failed to send notifications for some reason, it\nwill output events only to stdout without complaining.\n\nyou can press C-c to quit the listen mode.\n\nthere is also a systemd service installed with the program that uses\n`matrixcli listen`, to enable it you can run the following.\n\n``` {.shell}\nsystemctl --user enable --now matrixcli\n```\n\ntail\n----\n\nreturns the last n messages of a room.\n\n``` {.shell}\nmatrixcli tail -h\n```\n\n``` {.example}\nusage: matrixcli tail [-h] [-r ROOM_ID | -a ROOM_ALIAS] [-f] [-n [1-100]]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -r ROOM_ID, --room-id ROOM_ID\n                        specify the room id\n  -a ROOM_ALIAS, --room-alias ROOM_ALIAS\n                        specify the room by room alias\n  -f, --follow          wait for messages and print them as they come\n  -n [1-100], --messages [1-100]\n                        print the last specified messages\n```\n\nthe option -f prints the last messages but wait for new messages and\nprint them as they come.\n\nyou can also send messages while in follow mode by typing the message\nyou want to send and hit enter to send it.\n\nsend\n----\n\n``` {.shell}\nmatrixcli send --help \n```\n\n``` {.example}\nusage: matrixcli send [-h] [-r ROOM_ID | -a ROOM_ALIAS] [-t | -f] content\n\npositional arguments:\n  content\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -r ROOM_ID, --room-id ROOM_ID\n                        specify the room id\n  -a ROOM_ALIAS, --room-alias ROOM_ALIAS\n                        specify the room by room alias\n  -t, --text            force the program to treat the content as text message\n  -f, --file            force the program to treat the content as a file\n```\n\nthe send command takes the content you want to send as a positional\narguments, the program first sees if the passed text represent a file\nthat exists in the filesystem, if so it will try to guess its MIME type\nbased on the extension to correctly preview the content on the\nreceiver\\'s end. if the passed text does not represent any file on the\nfilesystem the program will treat it as a text message.\n\nto force the program to treat the content as a file or a text you can\nspecify the optional arguments --file or --text.\n\nunread\n------\n\n``` {.shell}\nmatrixcli unread --help \n```\n\n``` {.example}\nusage: matrixcli unread [-h] [-f] [-r ROOM_ID | -a ROOM_ALIAS]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f, --follow          don't close connection and print the number of unread\n                        messages whenever updated\n  -r ROOM_ID, --room-id ROOM_ID\n                        specify the room id\n  -a ROOM_ALIAS, --room-alias ROOM_ALIAS\n                        specify the room by room alias\n```\n\noutputs unread messages for room~id~ or all rooms (except those in\nignore~rooms~) if no room~id~ or room~alias~ specified\n","data":{"title":"matrixcli","githubrepo":"https://github.com/saadnpq/matrixcli","description":"command line matrix chat client","date":"2019-05-01T00:00:00.000Z","tags":["chat","command line","python"]},"isEmpty":false,"excerpt":""}]